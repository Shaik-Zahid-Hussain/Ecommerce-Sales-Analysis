{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "279a3312-9538-422f-9a08-a9b77f647512",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----------+------------------+\n",
      "|OrderMonth|      TotalRevenue|\n",
      "+----------+------------------+\n",
      "|        12|            519.98|\n",
      "|         1|           1299.93|\n",
      "|         6|           1799.91|\n",
      "|         3|           1759.92|\n",
      "|         5|           1449.88|\n",
      "|         9|            529.97|\n",
      "|         4|            247.94|\n",
      "|         8|1059.8999999999999|\n",
      "|         7|            799.95|\n",
      "|        10|            1339.9|\n",
      "|        11|            519.94|\n",
      "|         2|            889.95|\n",
      "+----------+------------------+\n",
      "\n",
      "+---------+-------------+\n",
      "|ProductID|TotalQuantity|\n",
      "+---------+-------------+\n",
      "|      103|           10|\n",
      "|      102|           10|\n",
      "|      106|            9|\n",
      "|      108|            8|\n",
      "|      101|            8|\n",
      "|      111|            8|\n",
      "|      107|            7|\n",
      "|      104|            7|\n",
      "|      109|            6|\n",
      "|      110|            6|\n",
      "|      105|            4|\n",
      "+---------+-------------+\n",
      "\n",
      "+---------------+------------------+\n",
      "|ProductCategory|   CategoryRevenue|\n",
      "+---------------+------------------+\n",
      "|           Home|           1667.82|\n",
      "|    Electronics|           5749.68|\n",
      "|       Clothing| 799.7700000000001|\n",
      "|      Furniture|3999.9000000000005|\n",
      "+---------------+------------------+\n",
      "\n",
      "+----------+------------------+\n",
      "|CustomerID|     AvgOrderValue|\n",
      "+----------+------------------+\n",
      "|      1025|            799.98|\n",
      "|      1005|            149.97|\n",
      "|      1016|249.95000000000002|\n",
      "|      1031|            399.96|\n",
      "|      1030|            199.98|\n",
      "|      1034|             39.98|\n",
      "|      1019|            479.96|\n",
      "|      1008|            399.99|\n",
      "|      1021|             59.97|\n",
      "|      1026|359.96999999999997|\n",
      "|      1028|            999.95|\n",
      "|      1029|            449.97|\n",
      "|      1032|             29.99|\n",
      "|      1010|            299.98|\n",
      "|      1002|             29.99|\n",
      "|      1017|           1199.97|\n",
      "|      1015|             99.99|\n",
      "|      1022|            179.98|\n",
      "|      1001|           299.985|\n",
      "|      1020|             99.99|\n",
      "+----------+------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from pyspark.sql import SparkSession\n",
    "from pyspark.sql.functions import col, month, sum as spark_sum, count, avg\n",
    "\n",
    "spark = SparkSession.builder.appName(\"ECommerceSalesTrends\").getOrCreate()\n",
    "\n",
    "file_path = \"sales_data.csv\"\n",
    "sales_df = spark.read.csv(file_path, header=True, inferSchema=True)\n",
    "\n",
    "sales_df = sales_df.withColumn(\"TotalPrice\", col(\"Quantity\") * col(\"UnitPrice\"))\n",
    "\n",
    "sales_df = sales_df.withColumn(\"OrderMonth\", month(\"OrderDate\"))\n",
    "\n",
    "monthly_revenue = sales_df.groupBy(\"OrderMonth\").agg(spark_sum(\"TotalPrice\").alias(\"TotalRevenue\"))\n",
    "\n",
    "top_products = sales_df.groupBy(\"ProductID\").agg(spark_sum(\"Quantity\").alias(\"TotalQuantity\")) \\\n",
    "                       .orderBy(col(\"TotalQuantity\").desc())\n",
    "\n",
    "revenue_by_category = sales_df.groupBy(\"ProductCategory\").agg(spark_sum(\"TotalPrice\").alias(\"CategoryRevenue\"))\n",
    "\n",
    "avg_order_value = sales_df.groupBy(\"CustomerID\").agg(avg(\"TotalPrice\").alias(\"AvgOrderValue\"))\n",
    "\n",
    "monthly_revenue.show()\n",
    "top_products.show()\n",
    "revenue_by_category.show()\n",
    "avg_order_value.show()\n",
    "\n",
    "spark.stop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4813841e-fa61-4f19-bdd4-b4ff5995d975",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "",
   "name": ""
  },
  "language_info": {
   "name": ""
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
